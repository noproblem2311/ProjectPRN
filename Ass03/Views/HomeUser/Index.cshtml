@model List<Ass03.Models.Product>

<!DOCTYPE html>
<html lang="en">

<head>
  @*  <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <meta name="author" content="Farzaliyeva Minaya">
    <meta name="description"
        content="Elite Shoppy an Ecommerce Online Shopping Category Flat Bootstrap Responsive Website Template which is rebuilt by DragonFly team using HTML5, CSS3, JS/ES6, Bootstrap431, Fontawesome5. It is fully free, you can use it just praying for us.">
    <meta name="og:description"
        content="Elite Shoppy an Ecommerce Online Shopping Category Flat Bootstrap Responsive Website Template which is rebuilt by DragonFly team using HTML5, CSS3, JS/ES6, Bootstrap431, Fontawesome5. It is fully free, you can use it just praying for us.">
    <meta name="keywords"
        content="Men`s clothing, Women`s clothing, Shopping, Elite Shoppy Responsive web template, Bootstrap Web Templates, Flat Web Templates, Android Compatible web template, Smartphone Compatible web template, free webdesigns for Nokia, Samsung, LG, SonyEricsson, Motorola web design, web template, mobile web template, responsible template, bootstrap template, jquery template, shopping site, shopping template, clothes, shop, shoppy, shopping, wearings, shoes">
    <meta name="copyright" content="DragonFly team">
    <meta name="robot" content="index, follow"> *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.2/css/all.css"
        integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,700" rel="stylesheet">
    <link rel="stylesheet" href="css/header.css">
    <link rel="stylesheet" href="css/v_css.css">
    <link rel="stylesheet" href="css/footer.css">
    <link rel="stylesheet" href="css/arrival.css">
    <link rel="stylesheet" href="css/elx.css">
    <title>Elite Shoppy</title>
</head>

<body>

   

    <!-- Owl Carousel Start -->
    <section class="slider">
        <div class="bd-example">
            <div id="carouselExampleCaptions" class="carousel slide" data-ride="carousel">
                <ol class="carousel-indicators">
                    <li data-target="#carouselExampleCaptions" data-slide-to="0" class="active"></li>
                    <li data-target="#carouselExampleCaptions" data-slide-to="1"></li>
                    <li data-target="#carouselExampleCaptions" data-slide-to="2"></li>
                    <li data-target="#carouselExampleCaptions" data-slide-to="3"></li>
                    <li data-target="#carouselExampleCaptions" data-slide-to="4"></li>
                </ol>
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img src="img/banner1.jpg" class="d-block w-100 img" alt="...">
                        <div class="carousel-caption">
                            <h3>The Biggest <span>Sale</span> </h3>
                            <p>Special for today</p>
                            <button href="#" class="hoverOutta">Shop Now</button>
                        </div>
                    </div>
                    <div class="carousel-item">
                        <img src="img/banner2.jpg" class="d-block w-100" alt="...">
                        <div class="carousel-caption">
                            <h3>SUMMER <span>COLLECTION </span></h3>
                            <p>New Arrivals On Sale</p>
                            <button href="#" class="hoverOutta">Shop Now</button>
                        </div>
                    </div>
                    <div class="carousel-item">
                        <img src="img/banner3.jpg" class="d-block w-100" alt="...">
                        <div class="carousel-caption">
                            <h3>The Biggest <span>Sale</span> </h3>
                            <p>Special for today</p>
                            <button href="#" class="hoverOutta">Shop Now</button>
                        </div>
                    </div>
                    <div class="carousel-item">
                        <img src="img/banner4.jpg" class="d-block w-100" alt="...">
                        <div class="carousel-caption">
                            <h3>SUMMER <span>COLLECTION </span></h3>
                            <p>New Arrivals On Sale</p>
                            <button href="#" class="hoverOutta">Shop Now</button>
                        </div>
                    </div>
                    <div class="carousel-item">
                        <img src="img/banner5.jpg" class="d-block w-100" alt="...">
                        <div class="carousel-caption">
                            <h3>The Biggest <span>Sale</span> </h3>
                            <p>Special for today</p>
                            <button href="#" class="hoverOutta">Shop Now</button>
                        </div>
                    </div>
                </div>
                <a class="carousel-control-prev" href="#carouselExampleCaptions" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselExampleCaptions" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>

                </a>
            </div>
        </div>
    </section>
    <!-- Owl Carousel End -->
    <!--banner section html started-->
    <section class="banner-section">
        <div class="container">
            <div class="row">
                <div class="banner-content col-12 col-sm-12 col-md-6 col-lg-6">
                    <figure class="banner-effect">
                        <img src="img/bottom1.jpg" alt="banner-photo">
                        <figcaption>
                            <h2><span>f</span>all ahead</h2>
                            <p>New Arrivals</p>
                        </figcaption>
                    </figure>
                </div>
                <div class="banner-content col-12 col-sm-12 col-md-6 col-lg-6">
                    <figure class="banner-effect" id="banner-right-photo">
                        <img src="img/bottom2.jpg" alt="banner-photo">
                        <figcaption>
                            <h2><span>f</span>all ahead</h2>
                            <p>New Arrivals</p>
                        </figcaption>
                    </figure>
                </div>
            </div>
        </div>
    </section>
    <!--banner section html ended-->
    <section id="arrivals">
        <div class="container">
            <div class="col-md-12">
                <div class="arrival_content">
                    <h1><span>NEW </span> ARRIVALS</h1>
                </div>
            </div>

            <div class="arrivals d-md-block d-sm-none d-none">
                <div class=" col-12">
                    <div class="product_name">
                        <ul>
                            <li id="men">
                                NEW
                                <div class="triangle"></div>
                            </li>
                            <li id="women">
                                RE sale
                                <div class="triangle"></div>
                            </li>
                            <li id="bag">
                                BAGS
                                <div class="triangle"></div>
                            </li>
                            <li id="footwear">
                                FOOTWEAR
                                <div class="triangle"></div>
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="mens" style="display:block;">
                    <div class="col-12">
                        <div class="row mensWearPlace">
                        @foreach (var product in Model)
                        {
                           
                            
                                <div class="col-lg-3 col-md-4 col-sm-6 col-12">
                                    <div class="card">
                                        <div class="product_image">
                                            <img src="/products/@product.ImageUrl" class="card-img-top" alt="...">
                                            <a  class="quick_view"> <i class="fa fa-heart" style="color:red"></i> </a>
                                            <span>New</span>
                                        </div>
                                        <div class="card-body">
                                            <div class="product_info" id="p_1">
                                                <h5>
                                                    <a href="" class="productName">
                                                        @product.ProductName
                                                    </a>
                                                </h5>
                                                <span class="d-none productID">${product.productID}</span>
                                                <div class="product_price">
                                                    <span style="color:red" class="card-text productPrice">
                                                        @product.UnitPrice?.ToString("c")
                                                    </span>
                                                    <del class="text-muted">@product.UnitStock lefts</del>
                                                </div>
                                            </div>
                                            <div class="addCard">
                                                <button class="addToCart"
                                                        data-product-id="@product.ProductId"
                                                        data-product-name="@product.ProductName"
                                                        data-price="@product.UnitPrice"
                                                        data-stock="@product.UnitStock">
                                                    ADD TO CART
                                                </button>
                                                <div class="addCard1"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            
                        }
                            </div>
                       
                    </div>
                </div>

                <div class="women" style="display:none;">
                    <div class="col-12">
                        <div class="row womensWearPlace"></div>
                    </div>
                </div>

                <div class="bags" style="display:none;">
                    <div class="col-12">
                        <div class="row bagsPlace"></div>
                    </div>
                </div>

                <div class="footwear" style="display:none;">
                    <div class="col-12">
                        <div class="row footwearPlace"></div>
                    </div>
                </div>

            </div>

            <div class="accordionProducts d-md-none d-sm-block col-sm-12 accordion" id="accordionExample">
                <div class="card z-depth-0 bordered">
                    <div class="card-header fullHead transformers" id="headingOne">
                        <h5 class="mb-0">
                            <button class="myBtn" type="button" data-toggle="collapse" data-target="#collapseOne"
                                aria-expanded="true" aria-controls="collapseOne"
                                onclick="this.parentElement.parentElement.classList.toggle('transformers');">
                                Men's
                                <i class="fas fa-sort-down myArrowDN"></i>
                            </button>
                        </h5>
                    </div>
                    <div id="collapseOne" class="collapse show" aria-labelledby="headingOne"
                        data-parent="#accordionExample">
                        <div class="card-body">
                            <div class="row mensWearPlaceAccordion"></div>
                        </div>
                    </div>
                </div>
                <div class="card z-depth-0 bordered">
                    <div class="card-header fullHead" id="headingTwo">
                        <h5 class="mb-0">
                            <button class="myBtn collapsed" type="button" data-toggle="collapse"
                                data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo"
                                onclick="this.parentElement.parentElement.classList.toggle('transformers');">
                                Women's
                                <i class="fas fa-sort-down myArrowDN"></i>
                            </button>
                        </h5>
                    </div>
                    <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionExample">
                        <div class="card-body">
                            <div class="row womensWearPlaceAccordion"></div>
                        </div>
                    </div>
                </div>
                <div class="card z-depth-0 bordered">
                    <div class="card-header fullHead" id="headingThree">
                        <h5 class="mb-0">
                            <button class="myBtn collapsed" type="button" data-toggle="collapse"
                                data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree"
                                onclick="this.parentElement.parentElement.classList.toggle('transformers');">
                                Bags
                                <i class="fas fa-sort-down myArrowDN"></i>
                            </button>
                        </h5>
                    </div>
                    <div id="collapseThree" class="collapse" aria-labelledby="headingThree"
                        data-parent="#accordionExample">
                        <div class="card-body">
                            <div class="row bagsPlaceAccordion"></div>
                        </div>
                    </div>
                </div>
                <div class="card z-depth-0 bordered">
                    <div class="card-header fullHead" id="headingFour">
                        <h5 class="mb-0">
                            <button class="myBtn collapsed" type="button" data-toggle="collapse"
                                data-target="#collapseFour" aria-expanded="false" aria-controls="collapseFour"
                                onclick="this.parentElement.parentElement.classList.toggle('transformers');">
                                Footwear
                                <i class="fas fa-sort-down myArrowDN"></i>
                            </button>
                        </h5>
                    </div>
                    <div id="collapseFour" class="collapse" aria-labelledby="headingFour"
                        data-parent="#accordionExample">
                        <div class="card-body">
                            <div class="row footwearPlaceAccordion"></div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </section>

    <section class="basket-schedule" style="display: none" id="bl">
        <i class="fas fa-times" id="closer"></i>
        <ul id="minicart"></ul>
    </section>

    <section class="miniShoppingCart openModal d-none" id="modal">
        <span class="float-right" id="close" onclick="closeModal('modal')">x</span>
        <ul class="insideOfCart">
        </ul>
        <div id="orderInformation" class="order-information">
            <h3>Order Information</h3>
            <input type="text" id="shippingAddress" placeholder="Shipping Address" required />
            <input type="text" id="phoneNumber" placeholder="Phone Number" required />
            <button type="button" id="confirmOrder">Confirm Order</button>
        </div>
        <span class="totalAmount font-weight-bold offset-1">Subtotal: $<span id="totalAmount">0.00</span> USD</span>
    </section>

    <button class="btn btn-large btn-block  btn-info" id="openCart" onclick="showModal('modal')">
        Open Cart  
    </button>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addToCartButtons = document.querySelectorAll('.addToCart');

            addToCartButtons.forEach(button => {
                button.addEventListener('click', function () {
                    // Lấy thông tin từ data attributes
                    const productId = this.getAttribute('data-product-id');
                    const productName = this.getAttribute('data-product-name');
                    const price = this.getAttribute('data-price');
                    const stock = this.getAttribute('data-stock');

                    // Lấy cartId và userId từ session (đảm bảo đã được lưu vào session)
                    const cartId = @Html.Raw(Json.Serialize(Context.Session.GetString("cartid")));
                    const userId = @Html.Raw(Json.Serialize(Context.Session.GetString("userid")));

                    // Payload cho yêu cầu POST
                    const payload = {
                        cartId: cartId,
                        productId: productId,
                        quantity: 1, // Ví dụ: cố định số lượng là 1, bạn có thể thay đổi tùy ý
                        priceAtTimeOfAdding: price
                    };

                    // Gửi yêu cầu POST tới API
                    fetch('http://localhost:5226/api/ProductCarts', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(payload)
                    })
                        .then(response => response.json())
                        .then(data => {
                            console.log('Product added to cart:', data);
                            alert('Your order has been placed successfully!');
                            // Cập nhật UI hoặc thông báo cho người dùng
                        })
                        .catch((error) => {
                            console.error('Error adding product to cart:', error);
                        });
                });
            });
        });
    </script>

    <script>
document.addEventListener('DOMContentLoaded', function() {
    const confirmOrderButton = document.getElementById('confirmOrder');

    confirmOrderButton.addEventListener('click', async function() {
        const shippingAddress = document.getElementById('shippingAddress').value;
        const phoneNumber = document.getElementById('phoneNumber').value;
        const userId = @Html.Raw(Json.Serialize(Context.Session.GetString("userid")));
        // Giả sử bạn đã tính toán totalAmount ở phần trước
        const totalAmount = document.getElementById('totalAmount').textContent.replace('$', '');
        
        // Tạo mô tả cho đơn hàng từ các sản phẩm trong giỏ hàng
        const description = createOrderDescription();

        // Payload cho yêu cầu POST
        const payload = {
            userId: userId,
            orderDate: new Date().toISOString(),
            shippingAddress: shippingAddress,
            phoneNumber: phoneNumber,
            totalAmount: parseFloat(totalAmount),
            description: description
        };

        // Gửi yêu cầu POST tới API
        fetch('http://localhost:5226/api/OrderBills', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(payload)
        })
        .then(response => response.json())
        .then(data => {
            console.log('Order created successfully:', data);
            alert('Your order has been placed successfully!');
            // Đóng modal và làm mới trang hoặc cập nhật UI theo cần thiết
            closeModal('modal');
            window.location.reload();

        })
        .catch((error) => {
            console.error('Error creating order:', error);
            alert('There was a problem with your order. Please try again.');
        });
    });
});

// Hàm tạo mô tả đơn hàng từ các sản phẩm trong giỏ
function createOrderDescription() {
    let description = "Order Details:\n";
    // Bổ sung logic để lặp qua các sản phẩm trong giỏ và thêm vào description
    // Ví dụ:
    // description += `${productName} - Quantity: ${quantity}\n`;
    return description;
}

        function clearProductCarts() {
            product_cart_ids.forEach(id => {
                fetch(`http://localhost:5226/api/ProductCarts/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                    .then(response => {
                        if (response.ok) {
                            console.log(`ProductCart with id ${id} has been successfully deleted.`);
                            // Cập nhật UI hoặc thông báo cho người dùng nếu muốn
                        } else {
                            console.error(`Failed to delete ProductCart with id ${id}.`);
                        }
                    })
                    .catch(error => {
                        console.error('Error deleting ProductCart:', error);
                    });
            });

            
        }
</script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const confirmOrderButton = document.getElementById('confirmOrder');

            confirmOrderButton.addEventListener('click', async function () {
                const shippingAddress = document.getElementById('shippingAddress').value;
                const phoneNumber = document.getElementById('phoneNumber').value;
                const userId = @Html.Raw(Json.Serialize(Context.Session.GetString("userid")));
                // Giả sử bạn đã tính toán totalAmount ở phần trước
                const totalAmount = document.getElementById('totalAmount').textContent.replace('$', '');

                // Tạo mô tả cho đơn hàng từ các sản phẩm trong giỏ hàng
                const description = createOrderDescription();

                // Payload cho yêu cầu POST
                const payload = {
                    userId: parseInt(userId),
                    orderDate: new Date().toISOString(),
                    shippingAddress: shippingAddress,
                    phoneNumber: phoneNumber,
                    totalAmount: parseInt(totalAmount),
                    description: description
                };

                // Gửi yêu cầu POST tới API
                fetch('http://localhost:5226/api/OrderBills', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(payload)
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log('Order created successfully:', data);
                        alert('Your order has been placed successfully!');
                        // Đóng modal và làm mới trang hoặc cập nhật UI theo cần thiết
                        closeModal('modal');
                    })
                    .catch((error) => {
                        console.error('Error creating order:', error);
                        alert('There was a problem with your order. Please try again.');
                    });
            });
        });

        // Hàm tạo mô tả đơn hàng từ các sản phẩm trong giỏ
        function createOrderDescription() {
            let description = "Order Details:\n";
            // Bổ sung logic để lặp qua các sản phẩm trong giỏ và thêm vào description
            // Ví dụ:
            // description += `${productName} - Quantity: ${quantity}\n`;
            return description;
        }
    </script>

    <script>
        async function fetchProductsAndDisplayInCart() {
            // Lấy cartId từ session (giả định đã lưu trước đó)
            const cartId = @Context.Session.GetString("cartid"); // Sử dụng Razor syntax, đảm bảo rằng đoạn code này nằm trong file .cshtml

            if (!cartId) {
                console.error("No cartId found.");
                return;
            }

            // Lấy tất cả sản phẩm
            const productsResponse = await fetch('http://localhost:5226/api/Products');
            if (!productsResponse.ok) {
                console.error("Failed to fetch products");
                return;
            }
            const products = await productsResponse.json();

            // Lấy thông tin ProductCart dựa vào cartId
            const productCartsResponse = await fetch(`http://localhost:5226/api/ProductCarts/${cartId}`);
            if (!productCartsResponse.ok) {
                console.error("Failed to fetch product carts");
                return;
            }
            const productCarts = await productCartsResponse.json();
           // product_cart_ids = [cart["productCartId"] for cart in productCarts]
            // Hiển thị sản phẩm trong giỏ hàng
            const ulElement = document.querySelector('.insideOfCart');
            let totalAmount = 0;
            productCarts.forEach(pc => {
                const product = products.find(p => p.productId === pc.productId);
                if (product) {
                    const liElement = document.createElement('li');
                    liElement.innerHTML = `
                        <div>
                            <img src="/products/${product.imageUrl}" alt="${product.productName}" style="width: 50px; height: auto;">
                            <span>${product.productName} - Quantity: ${pc.quantity}</span>
                            <span>Price: ${pc.priceAtTimeOfAdding}</span>
                        </div>
                    `;
                    ulElement.appendChild(liElement);

                    // Tính toán tổng số tiền
                    totalAmount += pc.priceAtTimeOfAdding * pc.quantity;
                }
            });

            document.getElementById('totalAmount').textContent = totalAmount.toFixed(2);
            // Hiển thị modal giỏ hàng
            document.getElementById('modal').classList.remove('d-none');
        }

        // Gọi hàm khi trang được tải
        document.addEventListener('DOMContentLoaded', fetchProductsAndDisplayInCart);

        function closeModal(modalId) {
            document.getElementById(modalId).classList.add('d-none');
        }

        function showModal(modalId) {
            document.getElementById(modalId).classList.remove('d-none');
        }
    </script>


</body>

</html>
